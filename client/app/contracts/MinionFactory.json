{
  "contractName": "MinionFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "spawn",
      "outputs": [
        {
          "internalType": "address",
          "name": "minion",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"spawn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minion\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"spawn(address)\":{\"params\":{\"owner\":\"- The address of the real owner of the contract\"},\"returns\":{\"minion\":\"- The address of the newly deployed minion contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"spawn(address)\":{\"notice\":\"Deploys a new minion contract for the given owner. Passes msg.sender as the creator and the co-owner of the minion\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MinionFactory.sol\":\"MinionFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"project:/contracts/Minion.sol\":{\"keccak256\":\"0xd88772758625c7e649640a12d36d42150a193f96c3a537a03910cf5e4e3db4fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://837556f3fb82938d46fdf6c6938a253ac60245f02cb01803769174d10d389940\",\"dweb:/ipfs/QmbZcs81JZV5QXPMX9pmUwg9Kvvg2Hrju5ABZBDrabnSgy\"]},\"project:/contracts/MinionFactory.sol\":{\"keccak256\":\"0x1d846723829ed20bd532acdff7db21eb71754596cd7e5896cf0f5cd300401929\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://380a89940e6f2651ed8fec6c27bbec00b74f9ca3caa30b9943ca2cbacf8c46dd\",\"dweb:/ipfs/QmUe1UHUhUy1wrj724cR3Zkv4TdnzfrYc1Uu62H6mqcT73\"]},\"project:/contracts/interfaces/IMinion.sol\":{\"keccak256\":\"0xbc412c70ecef6db34e969ef3038042a6d1bfe8a94387a8dbb02bc57ab532c1ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d05611d83f2417f0f235d24cbe4382f2fa47026ce6fb9026f5294b7b3359a05\",\"dweb:/ipfs/QmdDnzq99pUVmCSH29iZE9rksdsgYuJzRmiu18B8ZMcNgp\"]},\"project:/contracts/interfaces/IMinionFactory.sol\":{\"keccak256\":\"0xa84d5508a9f93b985d5fb788b0b334099ce45f317968bd5105871287e3854269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d68d33825477eadb3a495514fc8e9b504f295fdfad8f0745021bea82da6eda7a\",\"dweb:/ipfs/QmXM8os16baxEqW4LzqwzjBt3mk2w61J6eWmuAbjJon3E4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610e28806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c63300a514610030575b600080fd5b61004361003e366004610129565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60006001600160a01b03821661007457600080fd5b6000336040516100839061011c565b6001600160a01b039091168152602001604051809103906000f0801580156100af573d6000803e3d6000fd5b50604051632a99dcd560e21b81526001600160a01b0385811660048301523360248301529192509082169063aa67735490604401600060405180830381600087803b1580156100fd57600080fd5b505af1158015610111573d6000803e3d6000fd5b509295945050505050565b610c998061015a83390190565b60006020828403121561013b57600080fd5b81356001600160a01b038116811461015257600080fd5b939250505056fe60a060405234801561001057600080fd5b50604051610c99380380610c9983398101604081905261002f91610058565b60016000556001600160a01b03811661004757600080fd5b6001600160a01b0316608052610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b608051610be96100b06000396000818160eb0152818161069601526106d10152610be96000f3fe6080604052600436106100595760003560e01c8063025e7c271461009c57806302d05d3f146100d95780632e1a7d4d1461010d57806354e59cec1461012f578063797530b91461015f578063aa6773541461018d57600080fd5b3661009757604051348152339030907f6047e5fc9c9d18a0e28e778d1344733e25b1c535c56ed9090b40aba96bc118ee9060200160405180910390a3005b600080fd5b3480156100a857600080fd5b506100bc6100b73660046108eb565b6101ad565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b506100bc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561011957600080fd5b5061012d6101283660046108eb565b6101cd565b005b34801561013b57600080fd5b5061014f61014a366004610920565b61030f565b60405190151581526020016100d0565b34801561016b57600080fd5b5061017f61017a366004610969565b610335565b6040516100d0929190610a97565b34801561019957600080fd5b5061012d6101a8366004610920565b61056d565b600181600281106101bd57600080fd5b01546001600160a01b0316905081565b6101f3600160005b01546001600160a01b031660018001546001600160a01b031661030f565b156102195760405162461bcd60e51b815260040161021090610aba565b60405180910390fd5b6001546001600160a01b031633148061023c57506002546001600160a01b031633145b6102585760405162461bcd60e51b815260040161021090610b0d565b600260005414156102ab5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610210565b6002600055476102fd5760405162461bcd60e51b815260206004820152601a60248201527f4d696e696f6e3a20696e73756666696369656e742066756e64730000000000006044820152606401610210565b6103073382610794565b506001600055565b60006001600160a01b038316158061032e57506001600160a01b038216155b9392505050565b600060606103446001836101d5565b156103615760405162461bcd60e51b815260040161021090610aba565b6001546001600160a01b031633148061038457506002546001600160a01b031633145b6103a05760405162461bcd60e51b815260040161021090610b0d565b600260005414156103f35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610210565b6002600055478311156104485760405162461bcd60e51b815260206004820152601c60248201527f4d696e696f6e3a20696e73756666696369656e742062616c616e6365000000006044820152606401610210565b60005a9050600080886001600160a01b03168688908a60405161046b9190610b5f565b600060405180830381858888f193505050503d80600081146104a9576040519150601f19603f3d011682016040523d82523d6000602084013e6104ae565b606091505b509150915060005a6104c09085610b7b565b905061050283836040518060400160405280601e81526020017f4d696e696f6e3a20657865637574696e67206f72646572206661696c656400008152506108b2565b8051604080516001600160a01b038e1681529115602083018190529082018490529750909550339030907fe804b280aa12cd5093196599c6e208dac4edc6ea9d2e690031382a2bc8468bc39060600160405180910390a3505060016000555091969095509350505050565b610577828261030f565b156105c45760405162461bcd60e51b815260206004820152601d60248201527f4d696e696f6e3a20696e76616c6964206164647265737320676976656e0000006044820152606401610210565b6105d0600160006101d5565b6106265760405162461bcd60e51b815260206004820152602160248201527f4d696e696f6e3a206f776e65727320616c7265616479207265676973746572656044820152601960fa1b6064820152608401610210565b806001600160a01b0316826001600160a01b031614156106945760405162461bcd60e51b815260206004820152602360248201527f4d696e696f6e3a2073616d65206164647265737320666f7220616c6c206f776e60448201526265727360e81b6064820152608401610210565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061070557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b6107665760405162461bcd60e51b815260206004820152602c60248201527f4d696e696f6e3a20636f6e74726163742063726561746f722073686f756c642060448201526b626520696e206f776e65727360a01b6064820152608401610210565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b804710156107e45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610210565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b50509050806108ad5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610210565b505050565b606083156108c157508161032e565b8251156108d15782518084602001fd5b8160405162461bcd60e51b81526004016102109190610ba0565b6000602082840312156108fd57600080fd5b5035919050565b80356001600160a01b038116811461091b57600080fd5b919050565b6000806040838503121561093357600080fd5b61093c83610904565b915061094a60208401610904565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561097f57600080fd5b61098885610904565b9350602085013567ffffffffffffffff808211156109a557600080fd5b818701915087601f8301126109b957600080fd5b8135818111156109cb576109cb610953565b604051601f8201601f19908116603f011681019083821181831017156109f3576109f3610953565b816040528281528a6020848701011115610a0c57600080fd5b826020860160208301376000928101602001929092525095989597505050506040840135936060013592915050565b60005b83811015610a56578181015183820152602001610a3e565b83811115610a65576000848401525b50505050565b60008151808452610a83816020860160208601610a3b565b601f01601f19169290920160200192915050565b8215158152604060208201526000610ab26040830184610a6b565b949350505050565b60208082526033908201527f4d696e696f6e3a20636f6e74726163742063616e206e6f742062652075736564604082015272206265666f7265207265676973746572696e6760681b606082015260800190565b60208082526032908201527f4d696e696f6e3a206f6e6c79206f776e65727320616c6c6f77656420746f207060408201527132b93337b936903a3434b99030b1ba34b7b760711b606082015260800190565b60008251610b71818460208701610a3b565b9190910192915050565b600082821015610b9b57634e487b7160e01b600052601160045260246000fd5b500390565b60208152600061032e6020830184610a6b56fea26469706673582212202a5d14d1bbe92d393fb4f4be872c90ae370c1bbbf099548f38ecb450736d314564736f6c63430008090033a2646970667358221220cee077719307167f3184611bf6ceec17ee0129424641b7363eddf49ce6a698ff64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c63300a514610030575b600080fd5b61004361003e366004610129565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60006001600160a01b03821661007457600080fd5b6000336040516100839061011c565b6001600160a01b039091168152602001604051809103906000f0801580156100af573d6000803e3d6000fd5b50604051632a99dcd560e21b81526001600160a01b0385811660048301523360248301529192509082169063aa67735490604401600060405180830381600087803b1580156100fd57600080fd5b505af1158015610111573d6000803e3d6000fd5b509295945050505050565b610c998061015a83390190565b60006020828403121561013b57600080fd5b81356001600160a01b038116811461015257600080fd5b939250505056fe60a060405234801561001057600080fd5b50604051610c99380380610c9983398101604081905261002f91610058565b60016000556001600160a01b03811661004757600080fd5b6001600160a01b0316608052610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b608051610be96100b06000396000818160eb0152818161069601526106d10152610be96000f3fe6080604052600436106100595760003560e01c8063025e7c271461009c57806302d05d3f146100d95780632e1a7d4d1461010d57806354e59cec1461012f578063797530b91461015f578063aa6773541461018d57600080fd5b3661009757604051348152339030907f6047e5fc9c9d18a0e28e778d1344733e25b1c535c56ed9090b40aba96bc118ee9060200160405180910390a3005b600080fd5b3480156100a857600080fd5b506100bc6100b73660046108eb565b6101ad565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b506100bc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561011957600080fd5b5061012d6101283660046108eb565b6101cd565b005b34801561013b57600080fd5b5061014f61014a366004610920565b61030f565b60405190151581526020016100d0565b34801561016b57600080fd5b5061017f61017a366004610969565b610335565b6040516100d0929190610a97565b34801561019957600080fd5b5061012d6101a8366004610920565b61056d565b600181600281106101bd57600080fd5b01546001600160a01b0316905081565b6101f3600160005b01546001600160a01b031660018001546001600160a01b031661030f565b156102195760405162461bcd60e51b815260040161021090610aba565b60405180910390fd5b6001546001600160a01b031633148061023c57506002546001600160a01b031633145b6102585760405162461bcd60e51b815260040161021090610b0d565b600260005414156102ab5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610210565b6002600055476102fd5760405162461bcd60e51b815260206004820152601a60248201527f4d696e696f6e3a20696e73756666696369656e742066756e64730000000000006044820152606401610210565b6103073382610794565b506001600055565b60006001600160a01b038316158061032e57506001600160a01b038216155b9392505050565b600060606103446001836101d5565b156103615760405162461bcd60e51b815260040161021090610aba565b6001546001600160a01b031633148061038457506002546001600160a01b031633145b6103a05760405162461bcd60e51b815260040161021090610b0d565b600260005414156103f35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610210565b6002600055478311156104485760405162461bcd60e51b815260206004820152601c60248201527f4d696e696f6e3a20696e73756666696369656e742062616c616e6365000000006044820152606401610210565b60005a9050600080886001600160a01b03168688908a60405161046b9190610b5f565b600060405180830381858888f193505050503d80600081146104a9576040519150601f19603f3d011682016040523d82523d6000602084013e6104ae565b606091505b509150915060005a6104c09085610b7b565b905061050283836040518060400160405280601e81526020017f4d696e696f6e3a20657865637574696e67206f72646572206661696c656400008152506108b2565b8051604080516001600160a01b038e1681529115602083018190529082018490529750909550339030907fe804b280aa12cd5093196599c6e208dac4edc6ea9d2e690031382a2bc8468bc39060600160405180910390a3505060016000555091969095509350505050565b610577828261030f565b156105c45760405162461bcd60e51b815260206004820152601d60248201527f4d696e696f6e3a20696e76616c6964206164647265737320676976656e0000006044820152606401610210565b6105d0600160006101d5565b6106265760405162461bcd60e51b815260206004820152602160248201527f4d696e696f6e3a206f776e65727320616c7265616479207265676973746572656044820152601960fa1b6064820152608401610210565b806001600160a01b0316826001600160a01b031614156106945760405162461bcd60e51b815260206004820152602360248201527f4d696e696f6e3a2073616d65206164647265737320666f7220616c6c206f776e60448201526265727360e81b6064820152608401610210565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061070557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316145b6107665760405162461bcd60e51b815260206004820152602c60248201527f4d696e696f6e3a20636f6e74726163742063726561746f722073686f756c642060448201526b626520696e206f776e65727360a01b6064820152608401610210565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b804710156107e45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610210565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b50509050806108ad5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610210565b505050565b606083156108c157508161032e565b8251156108d15782518084602001fd5b8160405162461bcd60e51b81526004016102109190610ba0565b6000602082840312156108fd57600080fd5b5035919050565b80356001600160a01b038116811461091b57600080fd5b919050565b6000806040838503121561093357600080fd5b61093c83610904565b915061094a60208401610904565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561097f57600080fd5b61098885610904565b9350602085013567ffffffffffffffff808211156109a557600080fd5b818701915087601f8301126109b957600080fd5b8135818111156109cb576109cb610953565b604051601f8201601f19908116603f011681019083821181831017156109f3576109f3610953565b816040528281528a6020848701011115610a0c57600080fd5b826020860160208301376000928101602001929092525095989597505050506040840135936060013592915050565b60005b83811015610a56578181015183820152602001610a3e565b83811115610a65576000848401525b50505050565b60008151808452610a83816020860160208601610a3b565b601f01601f19169290920160200192915050565b8215158152604060208201526000610ab26040830184610a6b565b949350505050565b60208082526033908201527f4d696e696f6e3a20636f6e74726163742063616e206e6f742062652075736564604082015272206265666f7265207265676973746572696e6760681b606082015260800190565b60208082526032908201527f4d696e696f6e3a206f6e6c79206f776e65727320616c6c6f77656420746f207060408201527132b93337b936903a3434b99030b1ba34b7b760711b606082015260800190565b60008251610b71818460208701610a3b565b9190910192915050565b600082821015610b9b57634e487b7160e01b600052601160045260246000fd5b500390565b60208152600061032e6020830184610a6b56fea26469706673582212202a5d14d1bbe92d393fb4f4be872c90ae370c1bbbf099548f38ecb450736d314564736f6c63430008090033a2646970667358221220cee077719307167f3184611bf6ceec17ee0129424641b7363eddf49ce6a698ff64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:819:23",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:23",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:23"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:23"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:23"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:23",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:23",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:23"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:23"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:23"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:23"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:23",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:23",
                "type": ""
              }
            ],
            "src": "14:286:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:102:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "473:6:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "489:3:23",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "494:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "485:11:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "498:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "481:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "481:19:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "469:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "469:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:51:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:51:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:23",
                "type": ""
              }
            ],
            "src": "305:203:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "642:175:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "652:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "664:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "660:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "652:4:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "687:29:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "705:3:23",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "710:1:23",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "701:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "701:11:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "714:1:23",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "697:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:19:23"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "691:2:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "732:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "747:6:23"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "755:2:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "743:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "743:15:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "725:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "725:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "725:34:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "779:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "790:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "775:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "775:18:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "799:6:23"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "807:2:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "795:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "795:15:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "768:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:43:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "768:43:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "603:9:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "614:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "622:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "633:4:23",
                "type": ""
              }
            ],
            "src": "513:304:23"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "121:548:16:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "121:548:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:226;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;469:32:23;;;451:51;;439:2;424:18;441:226:16;;;;;;;;487:14;-1:-1:-1;;;;;519:19:16;;511:28;;;;;;547:14;575:10;564:22;;;;;:::i;:::-;-1:-1:-1;;;;;469:32:23;;;451:51;;439:2;424:18;564:22:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;594:35:16;;-1:-1:-1;;;594:35:16;;-1:-1:-1;;;;;743:15:23;;;594:35:16;;;725:34:23;618:10:16;775:18:23;;;768:43;547:39:16;;-1:-1:-1;594:16:16;;;;;;660:18:23;;594:35:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;654:7:16;;441:226;-1:-1:-1;;;;;441:226:16:o;-1:-1:-1:-;;;;;;;;:::o;14:286:23:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:23;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:23:o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport './Minion.sol';\nimport './interfaces/IMinionFactory.sol';\n\ncontract MinionFactory is IMinionFactory {\n  /**\n   * Deploys a new minion contract for the given owner.\n   * Passes msg.sender as the creator and the co-owner of the minion\n   * @param owner - The address of the real owner of the contract\n   * @return minion - The address of the newly deployed minion contract\n   */\n  function spawn(address owner) public returns (address minion) {\n      require(owner != address(0));\n      Minion _minion = new Minion(msg.sender);\n      _minion.register(owner, msg.sender);\n      minion = address(_minion);\n  }\n}\n",
  "sourcePath": "/Users/dimitriskyriazopoulos/Development/solid/blockchain-developer-bootcamp-final-project/solidity/contracts/MinionFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/MinionFactory.sol",
    "exportedSymbols": {
      "Address": [
        532
      ],
      "IMinion": [
        3199
      ],
      "IMinionFactory": [
        3210
      ],
      "Minion": [
        3087
      ],
      "MinionFactory": [
        3137
      ],
      "ReentrancyGuard": [
        235
      ]
    },
    "id": 3138,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3089,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:22:16"
      },
      {
        "absolutePath": "project:/contracts/Minion.sol",
        "file": "./Minion.sol",
        "id": 3090,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3138,
        "sourceUnit": 3088,
        "src": "55:22:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IMinionFactory.sol",
        "file": "./interfaces/IMinionFactory.sol",
        "id": 3091,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3138,
        "sourceUnit": 3211,
        "src": "78:41:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3092,
              "name": "IMinionFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3210,
              "src": "147:14:16"
            },
            "id": 3093,
            "nodeType": "InheritanceSpecifier",
            "src": "147:14:16"
          }
        ],
        "canonicalName": "MinionFactory",
        "contractDependencies": [
          3087
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3137,
        "linearizedBaseContracts": [
          3137,
          3210
        ],
        "name": "MinionFactory",
        "nameLocation": "130:13:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3209
            ],
            "body": {
              "id": 3135,
              "nodeType": "Block",
              "src": "503:164:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3102,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "519:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "536:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "528:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "528:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "528:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "519:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "511:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3109,
                  "nodeType": "ExpressionStatement",
                  "src": "511:28:16"
                },
                {
                  "assignments": [
                    3112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3112,
                      "mutability": "mutable",
                      "name": "_minion",
                      "nameLocation": "554:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 3135,
                      "src": "547:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Minion_$3087",
                        "typeString": "contract Minion"
                      },
                      "typeName": {
                        "id": 3111,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3110,
                          "name": "Minion",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3087,
                          "src": "547:6:16"
                        },
                        "referencedDeclaration": 3087,
                        "src": "547:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Minion_$3087",
                          "typeString": "contract Minion"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3119,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "575:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "575:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "564:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Minion_$3087_$",
                        "typeString": "function (address) returns (contract Minion)"
                      },
                      "typeName": {
                        "id": 3114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3113,
                          "name": "Minion",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3087,
                          "src": "568:6:16"
                        },
                        "referencedDeclaration": 3087,
                        "src": "568:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Minion_$3087",
                          "typeString": "contract Minion"
                        }
                      }
                    },
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Minion_$3087",
                      "typeString": "contract Minion"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "547:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3123,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3096,
                        "src": "611:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "618:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "618:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3120,
                        "name": "_minion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3112,
                        "src": "594:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Minion_$3087",
                          "typeString": "contract Minion"
                        }
                      },
                      "id": 3122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2948,
                      "src": "594:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3127,
                  "nodeType": "ExpressionStatement",
                  "src": "594:35:16"
                },
                {
                  "expression": {
                    "id": 3133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3128,
                      "name": "minion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3099,
                      "src": "637:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3131,
                          "name": "_minion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3112,
                          "src": "654:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Minion_$3087",
                            "typeString": "contract Minion"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Minion_$3087",
                            "typeString": "contract Minion"
                          }
                        ],
                        "id": 3130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "646:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:7:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "646:16:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "637:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3134,
                  "nodeType": "ExpressionStatement",
                  "src": "637:25:16"
                }
              ]
            },
            "documentation": {
              "id": 3094,
              "nodeType": "StructuredDocumentation",
              "src": "166:272:16",
              "text": " Deploys a new minion contract for the given owner.\n Passes msg.sender as the creator and the co-owner of the minion\n @param owner - The address of the real owner of the contract\n @return minion - The address of the newly deployed minion contract"
            },
            "functionSelector": "c63300a5",
            "id": 3136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "spawn",
            "nameLocation": "450:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "464:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "456:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:15:16"
            },
            "returnParameters": {
              "id": 3100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3099,
                  "mutability": "mutable",
                  "name": "minion",
                  "nameLocation": "495:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "487:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:16:16"
            },
            "scope": 3137,
            "src": "441:226:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3138,
        "src": "121:548:16",
        "usedErrors": []
      }
    ],
    "src": "31:639:16"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/MinionFactory.sol",
    "exportedSymbols": {
      "Address": [
        532
      ],
      "IMinion": [
        3199
      ],
      "IMinionFactory": [
        3210
      ],
      "Minion": [
        3087
      ],
      "MinionFactory": [
        3137
      ],
      "ReentrancyGuard": [
        235
      ]
    },
    "id": 3138,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3089,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:22:16"
      },
      {
        "absolutePath": "project:/contracts/Minion.sol",
        "file": "./Minion.sol",
        "id": 3090,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3138,
        "sourceUnit": 3088,
        "src": "55:22:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IMinionFactory.sol",
        "file": "./interfaces/IMinionFactory.sol",
        "id": 3091,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3138,
        "sourceUnit": 3211,
        "src": "78:41:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3092,
              "name": "IMinionFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3210,
              "src": "147:14:16"
            },
            "id": 3093,
            "nodeType": "InheritanceSpecifier",
            "src": "147:14:16"
          }
        ],
        "canonicalName": "MinionFactory",
        "contractDependencies": [
          3087
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3137,
        "linearizedBaseContracts": [
          3137,
          3210
        ],
        "name": "MinionFactory",
        "nameLocation": "130:13:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3209
            ],
            "body": {
              "id": 3135,
              "nodeType": "Block",
              "src": "503:164:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3102,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3096,
                          "src": "519:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "536:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "528:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "528:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "528:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "519:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "511:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3109,
                  "nodeType": "ExpressionStatement",
                  "src": "511:28:16"
                },
                {
                  "assignments": [
                    3112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3112,
                      "mutability": "mutable",
                      "name": "_minion",
                      "nameLocation": "554:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 3135,
                      "src": "547:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Minion_$3087",
                        "typeString": "contract Minion"
                      },
                      "typeName": {
                        "id": 3111,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3110,
                          "name": "Minion",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3087,
                          "src": "547:6:16"
                        },
                        "referencedDeclaration": 3087,
                        "src": "547:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Minion_$3087",
                          "typeString": "contract Minion"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3119,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "575:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "575:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "564:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Minion_$3087_$",
                        "typeString": "function (address) returns (contract Minion)"
                      },
                      "typeName": {
                        "id": 3114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3113,
                          "name": "Minion",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3087,
                          "src": "568:6:16"
                        },
                        "referencedDeclaration": 3087,
                        "src": "568:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Minion_$3087",
                          "typeString": "contract Minion"
                        }
                      }
                    },
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Minion_$3087",
                      "typeString": "contract Minion"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "547:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3123,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3096,
                        "src": "611:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "618:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "618:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3120,
                        "name": "_minion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3112,
                        "src": "594:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Minion_$3087",
                          "typeString": "contract Minion"
                        }
                      },
                      "id": 3122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2948,
                      "src": "594:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3127,
                  "nodeType": "ExpressionStatement",
                  "src": "594:35:16"
                },
                {
                  "expression": {
                    "id": 3133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3128,
                      "name": "minion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3099,
                      "src": "637:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3131,
                          "name": "_minion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3112,
                          "src": "654:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Minion_$3087",
                            "typeString": "contract Minion"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Minion_$3087",
                            "typeString": "contract Minion"
                          }
                        ],
                        "id": 3130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "646:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:7:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "646:16:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "637:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3134,
                  "nodeType": "ExpressionStatement",
                  "src": "637:25:16"
                }
              ]
            },
            "documentation": {
              "id": 3094,
              "nodeType": "StructuredDocumentation",
              "src": "166:272:16",
              "text": " Deploys a new minion contract for the given owner.\n Passes msg.sender as the creator and the co-owner of the minion\n @param owner - The address of the real owner of the contract\n @return minion - The address of the newly deployed minion contract"
            },
            "functionSelector": "c63300a5",
            "id": 3136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "spawn",
            "nameLocation": "450:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "464:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "456:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:15:16"
            },
            "returnParameters": {
              "id": 3100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3099,
                  "mutability": "mutable",
                  "name": "minion",
                  "nameLocation": "495:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "487:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:16:16"
            },
            "scope": 3137,
            "src": "441:226:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3138,
        "src": "121:548:16",
        "usedErrors": []
      }
    ],
    "src": "31:639:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0xcCd1cE4a6DE99DE6D9fd474fa1a520387bf641ab",
      "transactionHash": "0x72ed9177497ab65ba98e0630055d1e5249e3f8f0b13026452fbebe1e19c5f704"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-17T03:49:16.102Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "spawn(address)": {
        "params": {
          "owner": "- The address of the real owner of the contract"
        },
        "returns": {
          "minion": "- The address of the newly deployed minion contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "spawn(address)": {
        "notice": "Deploys a new minion contract for the given owner. Passes msg.sender as the creator and the co-owner of the minion"
      }
    },
    "version": 1
  }
}